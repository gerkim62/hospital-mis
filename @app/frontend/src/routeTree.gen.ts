/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MainImport } from './routes/main'
import { Route as LoginImport } from './routes/login'
import { Route as ChangePasswordImport } from './routes/change-password'
import { Route as StockIndexImport } from './routes/stock/index'
import { Route as PatientsIndexImport } from './routes/patients/index'
import { Route as StockStockItemIdImport } from './routes/stock/$stockItemId'
import { Route as PatientsNewImport } from './routes/patients/new'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const MainRoute = MainImport.update({
  id: '/main',
  path: '/main',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ChangePasswordRoute = ChangePasswordImport.update({
  id: '/change-password',
  path: '/change-password',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const StockIndexRoute = StockIndexImport.update({
  id: '/stock/',
  path: '/stock/',
  getParentRoute: () => rootRoute,
} as any)

const PatientsIndexRoute = PatientsIndexImport.update({
  id: '/patients/',
  path: '/patients/',
  getParentRoute: () => rootRoute,
} as any)

const StockStockItemIdRoute = StockStockItemIdImport.update({
  id: '/stock/$stockItemId',
  path: '/stock/$stockItemId',
  getParentRoute: () => rootRoute,
} as any)

const PatientsNewRoute = PatientsNewImport.update({
  id: '/patients/new',
  path: '/patients/new',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/change-password': {
      id: '/change-password'
      path: '/change-password'
      fullPath: '/change-password'
      preLoaderRoute: typeof ChangePasswordImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/main': {
      id: '/main'
      path: '/main'
      fullPath: '/main'
      preLoaderRoute: typeof MainImport
      parentRoute: typeof rootRoute
    }
    '/patients/new': {
      id: '/patients/new'
      path: '/patients/new'
      fullPath: '/patients/new'
      preLoaderRoute: typeof PatientsNewImport
      parentRoute: typeof rootRoute
    }
    '/stock/$stockItemId': {
      id: '/stock/$stockItemId'
      path: '/stock/$stockItemId'
      fullPath: '/stock/$stockItemId'
      preLoaderRoute: typeof StockStockItemIdImport
      parentRoute: typeof rootRoute
    }
    '/patients/': {
      id: '/patients/'
      path: '/patients'
      fullPath: '/patients'
      preLoaderRoute: typeof PatientsIndexImport
      parentRoute: typeof rootRoute
    }
    '/stock/': {
      id: '/stock/'
      path: '/stock'
      fullPath: '/stock'
      preLoaderRoute: typeof StockIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/change-password': typeof ChangePasswordRoute
  '/login': typeof LoginRoute
  '/main': typeof MainRoute
  '/patients/new': typeof PatientsNewRoute
  '/stock/$stockItemId': typeof StockStockItemIdRoute
  '/patients': typeof PatientsIndexRoute
  '/stock': typeof StockIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/change-password': typeof ChangePasswordRoute
  '/login': typeof LoginRoute
  '/main': typeof MainRoute
  '/patients/new': typeof PatientsNewRoute
  '/stock/$stockItemId': typeof StockStockItemIdRoute
  '/patients': typeof PatientsIndexRoute
  '/stock': typeof StockIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/change-password': typeof ChangePasswordRoute
  '/login': typeof LoginRoute
  '/main': typeof MainRoute
  '/patients/new': typeof PatientsNewRoute
  '/stock/$stockItemId': typeof StockStockItemIdRoute
  '/patients/': typeof PatientsIndexRoute
  '/stock/': typeof StockIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/change-password'
    | '/login'
    | '/main'
    | '/patients/new'
    | '/stock/$stockItemId'
    | '/patients'
    | '/stock'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/change-password'
    | '/login'
    | '/main'
    | '/patients/new'
    | '/stock/$stockItemId'
    | '/patients'
    | '/stock'
  id:
    | '__root__'
    | '/'
    | '/change-password'
    | '/login'
    | '/main'
    | '/patients/new'
    | '/stock/$stockItemId'
    | '/patients/'
    | '/stock/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  ChangePasswordRoute: typeof ChangePasswordRoute
  LoginRoute: typeof LoginRoute
  MainRoute: typeof MainRoute
  PatientsNewRoute: typeof PatientsNewRoute
  StockStockItemIdRoute: typeof StockStockItemIdRoute
  PatientsIndexRoute: typeof PatientsIndexRoute
  StockIndexRoute: typeof StockIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  ChangePasswordRoute: ChangePasswordRoute,
  LoginRoute: LoginRoute,
  MainRoute: MainRoute,
  PatientsNewRoute: PatientsNewRoute,
  StockStockItemIdRoute: StockStockItemIdRoute,
  PatientsIndexRoute: PatientsIndexRoute,
  StockIndexRoute: StockIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/change-password",
        "/login",
        "/main",
        "/patients/new",
        "/stock/$stockItemId",
        "/patients/",
        "/stock/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/change-password": {
      "filePath": "change-password.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/main": {
      "filePath": "main.tsx"
    },
    "/patients/new": {
      "filePath": "patients/new.tsx"
    },
    "/stock/$stockItemId": {
      "filePath": "stock/$stockItemId.tsx"
    },
    "/patients/": {
      "filePath": "patients/index.tsx"
    },
    "/stock/": {
      "filePath": "stock/index.ts"
    }
  }
}
ROUTE_MANIFEST_END */
